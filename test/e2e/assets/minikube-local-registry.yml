#@ load("@ytt:data", "data")

apiVersion: v1
kind: ServiceAccount
metadata:
  name: registry-sa
imagePullSecrets:
- name: dockerhub-credentials
---
apiVersion: v1
kind: Service
metadata:
  name: registry
spec:
  type: NodePort
  selector:
    registry: ""
  ports:
  - name: registry
    port: 5000
    nodePort: 30777
---
apiVersion: v1
kind: Pod
metadata:
  name: registry
  labels:
    registry: ""
  annotations:
    kapp.k14s.io/update-strategy: fallback-on-replace
    kbld.k14s.io/images: |
      - Metas:
        - Tag: "2"
          Type: resolved
          URL: registry:2
        URL: index.docker.io/library/registry@sha256:7d081088e4bfd632a88e3f3bcd9e007ef44a796fddfe3261407a3f9f04abe1e7
spec:
  serviceAccountName: registry-sa
  containers:
  - name: registry
    image: index.docker.io/library/registry@sha256:7d081088e4bfd632a88e3f3bcd9e007ef44a796fddfe3261407a3f9f04abe1e7
    ports:
    - containerPort: 5000
    volumeMounts:
    - name: config
      mountPath: /etc/docker/registry
      readOnly: true
    - name: tls-cert
      mountPath: /etc/docker/registry-tls
      readOnly: true
  volumes:
  - name: config
    configMap:
      name: registry-config
  - name: tls-cert
    secret:
      secretName: registry-tls-cert
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: registry-config
  annotations:
    kapp.k14s.io/versioned: ""
data:
  config.yml: |
    # Taken from /etc/docker/registry/config.yml
    version: 0.1
    log:
      fields:
        service: registry
    storage:
      cache:
        blobdescriptor: inmemory
      filesystem:
        rootdirectory: /var/lib/registry
    http:
      addr: :5000
      headers:
        X-Content-Type-Options: [nosniff]
      tls:
        certificate: /etc/docker/registry-tls/crt.pem
        key: /etc/docker/registry-tls/key.pem
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3
    # Custom: allows for foreign layers to be allowed in
    validation:
      manifests:
        urls:
          allow:
            - ^https?://
---
apiVersion: secretgen.k14s.io/v1alpha1
kind: Certificate
metadata:
  name: registry-ca-cert
spec:
  isCA: true
---
apiVersion: secretgen.k14s.io/v1alpha1
kind: Certificate
metadata:
  name: registry-tls-cert
spec:
  caRef:
    name: registry-ca-cert
  alternativeNames:
  - unused-domain.com #! non-ip domain to make generation happy
  - #@ data.values.registry_alt_name
